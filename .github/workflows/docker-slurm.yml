name: ExascaleSandboxTests

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    permissions:
      packages: write
      contents: read
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      -
        name: Prune pre-loaded GHA docker images
        run: |
          docker images
          docker image prune -a -f
          docker images
      -
        name: Create spack-stack Dockerfile and mirror
        run: |
          export S3_BUILD_CACHE_KEY=${{ secrets.SPACK_STACK_BUILDCACHE_KEY }}
          export S3_BUILD_CACHE_SECRET_KEY=${{ secrets.SPACK_STACK_BUILDCACHE_SECRET_KEY }}
          cd docker/spack-stack
          cat mirrors.in.yaml | envsubst > mirrors.yaml
          ./create_dockerfile.sh
      -
        name: Make lint
        run:  |
          pip install flake8
          flake8
      -
        name: Build spack-stack
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/spack-stack/Dockerfile
          secret-files: "mirrors=./docker/spack-stack/mirrors.yaml"
          secrets: |
            "spack_stack_buildcache_key=${{ secrets.SPACK_STACK_BUILDCACHE_KEY }}"
            "spack_stack_buildcache_secret_key=${{ secrets.SPACK_STACK_BUILDCACHE_SECRET_KEY }}"
          push: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/spack-stack-gnu-openmpi:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/spack-stack-gnu-openmpi:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/spack-stack-gnu-openmpi:cache,mode=max
      -
        name: Build frontend
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/frontend/Dockerfile
          push: false
          load: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:cache,mode=max
      -
        name: Build master
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/master/Dockerfile
          push: false
          load: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:cache,mode=max
      -
        name: Build node
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/node/Dockerfile
          push: false
          load: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:cache,mode=max
      -
        name: Start Slurm cluster containers
        run: |
          cd docker
          export DOCKER_CLIENT_TIMEOUT=600
          export COMPOSE_HTTP_TIMEOUT=600
          docker compose version
          docker compose config
          docker images
          docker ps -a
          docker compose -f docker-compose.yml up -d --no-build
      -
        name: Copy test files to work directory
        run: |
          docker exec frontend bash -l -c "mkdir -p work; cd work ; cp -r ../chiltepin/* ."
      -
        name: Install chiltepin package
        run: docker exec frontend bash -l -c "cd work ; pip install -e ."
      -
        name: Run test suite
        run: docker exec frontend bash -l -c "cd work/tests ; pytest --assert=plain --config=ci.yaml"
      -
        name: Debug session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 60
        with:
          limit-access-to-actor: true
      -
        name: Shut down Slurm cluster containers
        run: |
          cd docker
          export DOCKER_CLIENT_TIMEOUT=600
          export COMPOSE_HTTP_TIMEOUT=600
          docker compose -f docker-compose.yml down
      -
        name: Push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/frontend/Dockerfile
          push: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/frontend:cache,mode=max
      -
        name: Push master
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/master/Dockerfile
          push: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/master:cache,mode=max
      -
        name: Push node
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/node/Dockerfile
          push: true
          tags: ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:latest
          cache-from: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:cache
          cache-to: type=registry,ref=ghcr.io/noaa-gsl/exascaleworkflowsandbox/node:cache,mode=max
