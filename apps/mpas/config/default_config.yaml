user:
  cycle_frequency: 12
  experiment_dir: ""
  first_cycle: !!timestamp 2023-09-15T00:00:00
  last_cycle:  !!timestamp 2023-09-15T00:00:00
  mesh_label: conus
  mpas_app: ""
  platform: big_computer
data:
  mesh_files: '{{ user.experiment_dir }}/mesh-data'
platform:
  scheduler: slurm
get_ics_data:
  execution:
    cores: 1
    walltime: 00:10:00
  external_model: GFS
  rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/{{ get_ics_data.external_model }}'
get_lbcs_data:
  execution:
    cores: 1
    walltime: 00:20:00
  external_model: GFS
  rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/{{ get_lbcs_data.external_model }}'
prepare_grib:
  ungrib:
    execution:
      batchargs:
        cores: 1
        walltime: 00:15:00
      executable: "{{ user.experiment_dir }}/WPS/4.5/ungrib.exe"
    gfs_files:
      forecast_length: 12
      interval_hours: 6
      offset: 0
      path: "{{ get_lbcs_data.rundir }}/gfs.t{cycle_hour:02d}z.pgrb2.0p25.f{forecast_hour:03d}"
    rundir: '{{ user.experiment_dir }}/{{cycle.strftime("%Y%m%d%H")}}/ungrib'
    vtable: "{{ user.experiment_dir }}/WPS/4.5/ungrib/Variable_Tables/Vtable.GFS"
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
create_ics:
  mpas_init: &mpas_init_config
    boundary_conditions:
      interval_hours: 6
      length: 6
      offset: 0
      path: "{{ prepare_grib.ungrib['rundir'] }}"
    execution:
      batchargs:
        cores: 4
        walltime: 01:30:00
      envcmds:
        - ulimit -s unlimited || true
        - module use {{ user.mpas_app }}/modulefiles
        - module load build_{{ user.platform }}_intel
      executable: "{{ user.experiment_dir }}/mpas/cbba5a4/exe/init_atmosphere_model"
      mpiargs:
        - "--ntasks=4"
      mpicmd: srun
    files_to_copy: &mpas_init_files_to_copy
      "{{ user.mesh_label }}.static.nc": "{{ data.mesh_files }}/{{ user.mesh_label }}.static.nc"
      "{{ user.mesh_label }}.graph.info.part.{{create_ics.mpas_init['execution']['batchargs']['cores']}}": '{{ data.mesh_files }}/{{ user.mesh_label }}.graph.info.part.{{create_ics.mpas_init["execution"]["batchargs"]["cores"]}}'
      stream_list.atmosphere.diagnostics: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.diagnostics"
      stream_list.atmosphere.output: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.output"
      stream_list.atmosphere.surface: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.surface"
    files_to_link: &mpas_init_files_to_link
      CAM_ABS_DATA.DBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/CAM_ABS_DATA.DBL"
      CAM_AEROPT_DATA.DBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/CAM_AEROPT_DATA.DBL"
      GENPARM.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/GENPARM.TBL"
      LANDUSE.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/LANDUSE.TBL"
      OZONE_DAT.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/OZONE_DAT.TBL"
      OZONE_LAT.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/OZONE_LAT.TBL"
      OZONE_PLEV.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/OZONE_PLEV.TBL"
      RRTMG_LW_DATA: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/RRTMG_LW_DATA"
      RRTMG_LW_DATA.DBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/RRTMG_LW_DATA.DBL"
      RRTMG_SW_DATA: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/RRTMG_SW_DATA"
      RRTMG_SW_DATA.DBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/RRTMG_SW_DATA.DBL"
      SOILPARM.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/SOILPARM.TBL"
      VEGPARM.TBL: "{{ user.experiment_dir }}/mpas/cbba5a4/src/core_atmosphere/physics/physics_wrf/files/VEGPARM.TBL"
    namelist:
      base_file: "{{ user.experiment_dir }}/mpas/cbba5a4/namelist.init_atmosphere"
      update_values: &mpas_init_update_values
        nhyd_model:
          config_init_case: 7
        data_sources:
          config_fg_interval: !int "{{ create_ics.mpas_init['boundary_conditions']['interval_hours'] * 3600 }}"
          config_met_prefix: FILE
        vertical_grid:
          config_blend_bdy_terrain: true
        preproc_stages:
          config_native_gwd_static: false
          config_static_interp: false
        decomposition:
          config_block_decomp_file_prefix: "{{ user.mesh_label }}.graph.info.part."
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/mpas_ics'
    streams:
      input:
        filename_template: "{{ user.mesh_label }}.static.nc"
        input_interval: initial_only
        type: input
        mutable: false
        io_type: "pnetcdf,cdf5"
      output:
        filename_template: "{{ user.mesh_label }}.init.nc"
        output_interval: initial_only
        type: output
        mutable: false
        io_type: "pnetcdf,cdf5"
        packages: initial_conds
        clobber_mode: overwrite
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
create_lbcs:
  mpas_init:
    <<: *mpas_init_config
    files_to_copy:
      <<: *mpas_init_files_to_copy
      "{{ user.mesh_label }}.init.nc": "{{ create_ics.mpas_init['rundir'] }}/{{ user.mesh_label }}.init.nc"
    namelist:
      base_file: "{{ user.experiment_dir }}/mpas/cbba5a4/namelist.init_atmosphere"
      update_values:
        <<: *mpas_init_update_values
        nhyd_model:
          config_init_case: 9
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/mpas_lbcs'
    streams:
      input:
        filename_template: "{{ user.mesh_label }}.init.nc"
        input_interval: initial_only
        type: input
        mutable: false
        io_type: "pnetcdf,cdf5"
      surface:
        filename_template: x1.40962.sfc_update.nc
        type: output
        filename_interval: "none"
        packages: sfc_update
        output_interval: "{{ 24 * 3600 }}"
        clobber_mode: overwrite
        mutable: false
      lbc:
        type: output
        filename_template: lbc.$Y-$M-$D_$h.$m.$s.nc
        filename_interval: output_interval
        packages: lbcs
        output_interval: 06:00:00
        mutable: false
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
forecast:
  mpas:
    execution:
      batchargs:
        cores: 32
        walltime: 01:30:00
      envcmds:
        - ulimit -s unlimited || true
        - module use {{ user.mpas_app }}/modulefiles
        - module load build_{{ user.platform }}_intel
      executable: "{{ user.mpas_app }}/exec/atmosphere_model"
      mpiargs:
        - "--ntasks={{ forecast.mpas['execution']['batchargs']['cores']}}"
      mpicmd: srun
    files_to_copy:
      "{{ user.mesh_label }}.init.nc": "{{ create_ics.mpas_init['rundir'] }}/{{ user.mesh_label }}.init.nc"
      "{{ user.mesh_label }}.graph.info.part.{{forecast.mpas['execution']['batchargs']['cores']}}": '{{ data.mesh_files }}/{{ user.mesh_label }}.graph.info.part.{{forecast.mpas["execution"]["batchargs"]["cores"]}}'
      stream_list.atmosphere.diagnostics: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.diagnostics"
      stream_list.atmosphere.output: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.output"
      stream_list.atmosphere.surface: "{{ user.experiment_dir }}/mpas/cbba5a4/stream_list.atmosphere.surface"
    files_to_link:
      <<: *mpas_init_files_to_link
    lateral_boundary_conditions:
      interval_hours: 6
      offset: 0
      path: "{{ create_lbcs.mpas_init['rundir'] }}"
    length: 6
    namelist:
      base_file: "{{ user.experiment_dir }}/mpas/cbba5a4/namelist.atmosphere"
      update_values:
        nhyd_model:
          config_dt: 60.0
        limited_area:
          config_apply_lbcs: true
        decomposition:
          config_block_decomp_file_prefix: "{{ user.mesh_label }}.graph.info.part."
    rundir: '{{ user.experiment_dir }}/{{ cycle.strftime("%Y%m%d%H") }}/forecast'
    streams:
        input:
          mutable: false
          type: input
          filename_template: "{{ user.mesh_label }}.init.nc"
          io_type: "pnetcdf,cdf5"
          input_interval: initial_only
        restart:
          mutable: false
          type: "input;output"
          filename_template: "restart.$Y-$M-$D_$h.$m.$s.nc"
          io_type: "pnetcdf,cdf5"
          input_interval: initial_only
          output_interval: "1_00:00:00"
          clobber_mode: overwrite
        output:
          mutable: true
          type: output
          filename_template: "history.$Y-$M-$D_$h.$m.$s.nc"
          output_interval: "06:00:00"
          files:
            - stream_list.atmosphere.output
          clobber_mode: overwrite
        diagnostics:
          mutable: true
          type: output
          filename_template: "diag.$Y-$M-$D_$h.$m.$s.nc"
          output_interval: "06:00:00"
          files:
            - stream_list.atmosphere.diagnostics
          clobber_mode: overwrite
        surface:
          mutable: true
          type: input
          filename_template: "x1.40962.sfc_update.nc"
          io_type: "pnetcdf,cdf5"
          filename_interval: "none"
          input_interval: "none"
          files:
            - stream_list.atmosphere.surface
        lbc_in:
          mutable: false
          type: input
          filename_template: "lbc.$Y-$M-$D_$h.$m.$s.nc"
          filename_interval: "input_interval"
          io_type: "pnetcdf,cdf5"
          packages: limited_area
          input_interval: 06:00:00
  platform:
    account: '{{ platform.account }}'
    scheduler: '{{ platform.scheduler }}'
